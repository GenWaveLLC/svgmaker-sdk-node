name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run tests
      run: npm test
      
    - name: Run linting
      run: npm run lint
      
    - name: Build package
      run: npm run build
      
    - name: Generate changelog
      id: changelog
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Generate changelog entry
        if [ -f CHANGELOG.md ]; then
          # Extract changelog entry for this version
          CHANGELOG_ENTRY=$(sed -n "/## \[$VERSION\]/,/## \[/p" CHANGELOG.md | sed '$d')
          if [ -z "$CHANGELOG_ENTRY" ]; then
            CHANGELOG_ENTRY="Release $VERSION"
          fi
        else
          CHANGELOG_ENTRY="Release $VERSION"
        fi
        
        # Save changelog to file for GitHub release
        echo "$CHANGELOG_ENTRY" > release_notes.md
        
    - name: Create GitHub Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ steps.changelog.outputs.version }}
        body_path: release_notes.md
        draft: false
        prerelease: ${{ contains(github.ref, '-') }}
        
    - name: Publish to npm
      run: npm publish
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        
    - name: Update documentation
      run: |
        # Generate API documentation if not already present
        if [ ! -f docs/api-documentation.md ]; then
          echo "# API Documentation" > docs/api-documentation.md
          echo "Generated for version ${{ steps.changelog.outputs.version }}" >> docs/api-documentation.md
        fi
      
    - name: Notify success
      if: success()
      run: |
        echo "âœ… Successfully released version ${{ steps.changelog.outputs.version }}"
        echo "ðŸ“¦ Package published to npm"
        echo "ðŸš€ GitHub release created"